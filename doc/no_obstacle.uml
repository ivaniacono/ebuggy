@startuml

participant go_to_point
participant motor
participant sharp

note over go_to_point, sharp
     Sends a request to 
     sharp gen_server for
     detecting obstacle.
end note

go_to_point -> sharp: sharp:alarm_obstacle(Timeout, {motor, stop, []})
activate sharp

note over go_to_point, motor
     Sends a request to 
     motor gen_server for
     activating motors.
end note

go_to_point -> motor: motor:forward(Timeout)
activate go_to_point
activate motor

note over go_to_point, motor
     Replies to go_to_point
     sending how long motors
     were on.
end note

motor --> go_to_point: Timeout
deactivate motor
deactivate go_to_point

note right of sharp
     No obstacle was detected
     and Timeout occurred.
end note

sharp -> sharp: timeout
deactivate sharp

@enduml